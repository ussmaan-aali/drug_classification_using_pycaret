2023-03-26 15:33:39,484:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:33:39,485:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:33:39,485:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:33:39,485:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:33:41,156:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-26 15:36:16,955:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:16,955:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:16,955:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:16,955:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:18,344:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-26 15:36:19,945:INFO:PyCaret ClassificationExperiment
2023-03-26 15:36:19,946:INFO:Logging name: classifying_drugs
2023-03-26 15:36:19,946:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-03-26 15:36:19,946:INFO:version 3.0.0
2023-03-26 15:36:19,946:INFO:Initializing setup()
2023-03-26 15:36:19,946:INFO:self.USI: adda
2023-03-26 15:36:19,946:INFO:self._variable_keys: {'_ml_usecase', 'fold_shuffle_param', 'USI', 'exp_name_log', 'gpu_n_jobs_param', 'fold_generator', 'fold_groups_param', 'y_test', 'log_plots_param', 'data', 'X_test', 'y_train', 'seed', 'n_jobs_param', 'pipeline', '_available_plots', 'exp_id', 'gpu_param', 'X_train', 'is_multiclass', 'target_param', 'idx', 'logging_param', 'X', 'html_param', 'fix_imbalance', 'memory', 'y'}
2023-03-26 15:36:19,946:INFO:Checking environment
2023-03-26 15:36:19,946:INFO:python_version: 3.10.10
2023-03-26 15:36:19,947:INFO:python_build: ('main', 'Mar 21 2023 18:39:17')
2023-03-26 15:36:19,947:INFO:machine: AMD64
2023-03-26 15:36:19,979:INFO:platform: Windows-10-10.0.19045-SP0
2023-03-26 15:36:19,982:INFO:Memory: svmem(total=8518459392, available=1749565440, percent=79.5, used=6768893952, free=1749565440)
2023-03-26 15:36:19,982:INFO:Physical Core: 2
2023-03-26 15:36:19,982:INFO:Logical Core: 4
2023-03-26 15:36:19,983:INFO:Checking libraries
2023-03-26 15:36:19,983:INFO:System:
2023-03-26 15:36:19,983:INFO:    python: 3.10.10 | packaged by Anaconda, Inc. | (main, Mar 21 2023, 18:39:17) [MSC v.1916 64 bit (AMD64)]
2023-03-26 15:36:19,983:INFO:executable: e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\python.exe
2023-03-26 15:36:19,983:INFO:   machine: Windows-10-10.0.19045-SP0
2023-03-26 15:36:19,983:INFO:PyCaret required dependencies:
2023-03-26 15:36:19,983:INFO:                 pip: 23.0.1
2023-03-26 15:36:19,984:INFO:          setuptools: 65.6.3
2023-03-26 15:36:19,984:INFO:             pycaret: 3.0.0
2023-03-26 15:36:19,984:INFO:             IPython: 8.11.0
2023-03-26 15:36:19,984:INFO:          ipywidgets: 8.0.5
2023-03-26 15:36:19,984:INFO:                tqdm: 4.65.0
2023-03-26 15:36:19,984:INFO:               numpy: 1.23.5
2023-03-26 15:36:19,984:INFO:              pandas: 1.5.3
2023-03-26 15:36:19,984:INFO:              jinja2: 3.1.2
2023-03-26 15:36:19,984:INFO:               scipy: 1.10.1
2023-03-26 15:36:19,985:INFO:              joblib: 1.2.0
2023-03-26 15:36:19,985:INFO:             sklearn: 1.2.2
2023-03-26 15:36:19,985:INFO:                pyod: 1.0.9
2023-03-26 15:36:19,985:INFO:            imblearn: 0.10.1
2023-03-26 15:36:19,985:INFO:   category_encoders: 2.6.0
2023-03-26 15:36:19,985:INFO:            lightgbm: 3.3.5
2023-03-26 15:36:19,985:INFO:               numba: 0.56.4
2023-03-26 15:36:19,985:INFO:            requests: 2.28.2
2023-03-26 15:36:19,986:INFO:          matplotlib: 3.7.1
2023-03-26 15:36:19,986:INFO:          scikitplot: 0.3.7
2023-03-26 15:36:19,986:INFO:         yellowbrick: 1.5
2023-03-26 15:36:19,986:INFO:              plotly: 5.13.1
2023-03-26 15:36:19,986:INFO:             kaleido: 0.2.1
2023-03-26 15:36:19,986:INFO:         statsmodels: 0.13.5
2023-03-26 15:36:19,986:INFO:              sktime: 0.16.1
2023-03-26 15:36:19,986:INFO:               tbats: 1.1.2
2023-03-26 15:36:19,986:INFO:            pmdarima: 2.0.3
2023-03-26 15:36:19,987:INFO:              psutil: 5.9.4
2023-03-26 15:36:19,987:INFO:PyCaret optional dependencies:
2023-03-26 15:36:20,005:INFO:                shap: Not installed
2023-03-26 15:36:20,005:INFO:           interpret: Not installed
2023-03-26 15:36:20,005:INFO:                umap: Not installed
2023-03-26 15:36:20,021:INFO:    pandas_profiling: Not installed
2023-03-26 15:36:20,021:INFO:  explainerdashboard: Not installed
2023-03-26 15:36:20,021:INFO:             autoviz: Not installed
2023-03-26 15:36:20,021:INFO:           fairlearn: Not installed
2023-03-26 15:36:20,022:INFO:             xgboost: Not installed
2023-03-26 15:36:20,022:INFO:            catboost: Not installed
2023-03-26 15:36:20,022:INFO:              kmodes: Not installed
2023-03-26 15:36:20,022:INFO:             mlxtend: Not installed
2023-03-26 15:36:20,023:INFO:       statsforecast: Not installed
2023-03-26 15:36:20,023:INFO:        tune_sklearn: Not installed
2023-03-26 15:36:20,023:INFO:                 ray: Not installed
2023-03-26 15:36:20,023:INFO:            hyperopt: Not installed
2023-03-26 15:36:20,024:INFO:              optuna: Not installed
2023-03-26 15:36:20,024:INFO:               skopt: Not installed
2023-03-26 15:36:20,024:INFO:              mlflow: Not installed
2023-03-26 15:36:20,024:INFO:              gradio: Not installed
2023-03-26 15:36:20,024:INFO:             fastapi: Not installed
2023-03-26 15:36:20,025:INFO:             uvicorn: Not installed
2023-03-26 15:36:20,025:INFO:              m2cgen: Not installed
2023-03-26 15:36:20,025:INFO:           evidently: Not installed
2023-03-26 15:36:20,025:INFO:               fugue: Not installed
2023-03-26 15:36:20,025:INFO:           streamlit: Not installed
2023-03-26 15:36:20,026:INFO:             prophet: Not installed
2023-03-26 15:36:20,026:INFO:None
2023-03-26 15:36:20,026:INFO:Set up GPU usage.
2023-03-26 15:36:20,026:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:20,026:WARNING:cuML is outdated or not found. Required version is >=22.10, got 3.0.0
2023-03-26 15:36:20,027:INFO:Set up data.
2023-03-26 15:36:20,046:INFO:Set up train/test split.
2023-03-26 15:36:20,055:INFO:Set up index.
2023-03-26 15:36:20,055:INFO:Set up folding strategy.
2023-03-26 15:36:20,055:INFO:Assigning column types.
2023-03-26 15:36:20,075:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-03-26 15:36:20,076:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:20,235:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-26 15:36:20,235:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:20,240:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:20,242:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-26 15:36:20,243:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:20,305:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:20,345:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:20,350:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:36:43,307:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:36:43,307:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:43,507:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-26 15:36:43,507:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:43,507:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:43,507:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-26 15:36:43,507:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:43,607:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:43,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:43,636:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:36:43,711:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:36:43,713:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-03-26 15:36:43,714:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:43,888:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:43,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:43,891:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-26 15:36:43,891:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:43,955:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:43,975:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:43,977:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:36:44,048:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:36:44,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:44,242:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:44,243:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:44,245:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-26 15:36:44,246:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:44,327:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:44,337:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:44,341:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:36:44,407:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:36:44,407:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-03-26 15:36:44,407:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:44,576:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:44,576:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:44,579:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:44,653:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:44,657:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:44,674:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:36:44,751:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:36:44,753:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:44,932:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:44,933:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:44,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:45,005:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:45,007:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:45,007:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:36:45,092:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:36:45,102:INFO:Preparing preprocessing pipeline...
2023-03-26 15:36:45,105:INFO:Set up label encoding.
2023-03-26 15:36:45,105:INFO:Set up simple imputation.
2023-03-26 15:36:45,124:INFO:Set up encoding of ordinal features.
2023-03-26 15:36:45,133:INFO:Set up encoding of categorical features.
2023-03-26 15:36:45,507:INFO:Finished creating preprocessing pipeline.
2023-03-26 15:36:45,630:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MSLINKS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Age', 'Na_to_K'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empt...
                                                                        {'col': 'Cholesterol',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': HIGH      0
NORMAL    1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['BP'],
                                    transformer=OneHotEncoder(cols=['BP'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2023-03-26 15:36:45,631:INFO:Creating final display dataframe.
2023-03-26 15:36:46,725:INFO:Setup _display_container:                     Description                                             Value
0                    Session id                                               123
1                        Target                                              Drug
2                   Target type                                        Multiclass
3                Target mapping  DrugY: 0, drugA: 1, drugB: 2, drugC: 3, drugX: 4
4           Original data shape                                          (200, 6)
5        Transformed data shape                                          (200, 8)
6   Transformed train set shape                                          (172, 8)
7    Transformed test set shape                                           (28, 8)
8              Ordinal features                                                 2
9              Numeric features                                                 2
10         Categorical features                                                 3
11                   Preprocess                                              True
12              Imputation type                                            simple
13           Numeric imputation                                              mean
14       Categorical imputation                                              mode
15     Maximum one-hot encoding                                                25
16              Encoding method                                              None
17               Fold Generator                                   StratifiedKFold
18                  Fold Number                                                10
19                     CPU Jobs                                                -1
20                      Use GPU                                              True
21               Log Experiment                                             False
22              Experiment Name                                 classifying_drugs
23                          USI                                              adda
2023-03-26 15:36:46,755:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:46,975:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:46,976:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:46,978:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:47,080:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:47,100:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:47,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:36:47,180:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:36:47,182:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:47,385:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:47,385:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:47,388:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:47,488:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:47,507:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:36:47,507:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:36:47,589:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:36:47,592:INFO:setup() successfully completed in 27.66s...............
2023-03-26 15:38:07,742:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:07,743:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:07,744:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:07,744:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:09,666:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-26 15:38:11,714:INFO:PyCaret ClassificationExperiment
2023-03-26 15:38:11,715:INFO:Logging name: classifying_drugs
2023-03-26 15:38:11,715:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-03-26 15:38:11,715:INFO:version 3.0.0
2023-03-26 15:38:11,715:INFO:Initializing setup()
2023-03-26 15:38:11,716:INFO:self.USI: 5384
2023-03-26 15:38:11,716:INFO:self._variable_keys: {'gpu_n_jobs_param', 'pipeline', 'X_train', 'fold_shuffle_param', 'logging_param', '_ml_usecase', '_available_plots', 'exp_id', 'idx', 'seed', 'y', 'html_param', 'memory', 'target_param', 'X', 'fold_generator', 'fold_groups_param', 'y_test', 'X_test', 'n_jobs_param', 'USI', 'exp_name_log', 'y_train', 'fix_imbalance', 'data', 'gpu_param', 'log_plots_param', 'is_multiclass'}
2023-03-26 15:38:11,716:INFO:Checking environment
2023-03-26 15:38:11,716:INFO:python_version: 3.10.10
2023-03-26 15:38:11,716:INFO:python_build: ('main', 'Mar 21 2023 18:39:17')
2023-03-26 15:38:11,717:INFO:machine: AMD64
2023-03-26 15:38:11,746:INFO:platform: Windows-10-10.0.19045-SP0
2023-03-26 15:38:11,746:INFO:Memory: svmem(total=8518459392, available=1711521792, percent=79.9, used=6806937600, free=1711521792)
2023-03-26 15:38:11,746:INFO:Physical Core: 2
2023-03-26 15:38:11,746:INFO:Logical Core: 4
2023-03-26 15:38:11,746:INFO:Checking libraries
2023-03-26 15:38:11,746:INFO:System:
2023-03-26 15:38:11,746:INFO:    python: 3.10.10 | packaged by Anaconda, Inc. | (main, Mar 21 2023, 18:39:17) [MSC v.1916 64 bit (AMD64)]
2023-03-26 15:38:11,746:INFO:executable: e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\python.exe
2023-03-26 15:38:11,746:INFO:   machine: Windows-10-10.0.19045-SP0
2023-03-26 15:38:11,746:INFO:PyCaret required dependencies:
2023-03-26 15:38:11,746:INFO:                 pip: 23.0.1
2023-03-26 15:38:11,746:INFO:          setuptools: 65.6.3
2023-03-26 15:38:11,746:INFO:             pycaret: 3.0.0
2023-03-26 15:38:11,746:INFO:             IPython: 8.11.0
2023-03-26 15:38:11,746:INFO:          ipywidgets: 8.0.5
2023-03-26 15:38:11,746:INFO:                tqdm: 4.65.0
2023-03-26 15:38:11,746:INFO:               numpy: 1.23.5
2023-03-26 15:38:11,746:INFO:              pandas: 1.5.3
2023-03-26 15:38:11,746:INFO:              jinja2: 3.1.2
2023-03-26 15:38:11,746:INFO:               scipy: 1.10.1
2023-03-26 15:38:11,746:INFO:              joblib: 1.2.0
2023-03-26 15:38:11,746:INFO:             sklearn: 1.2.2
2023-03-26 15:38:11,746:INFO:                pyod: 1.0.9
2023-03-26 15:38:11,746:INFO:            imblearn: 0.10.1
2023-03-26 15:38:11,746:INFO:   category_encoders: 2.6.0
2023-03-26 15:38:11,746:INFO:            lightgbm: 3.3.5
2023-03-26 15:38:11,746:INFO:               numba: 0.56.4
2023-03-26 15:38:11,746:INFO:            requests: 2.28.2
2023-03-26 15:38:11,746:INFO:          matplotlib: 3.7.1
2023-03-26 15:38:11,746:INFO:          scikitplot: 0.3.7
2023-03-26 15:38:11,746:INFO:         yellowbrick: 1.5
2023-03-26 15:38:11,746:INFO:              plotly: 5.13.1
2023-03-26 15:38:11,746:INFO:             kaleido: 0.2.1
2023-03-26 15:38:11,746:INFO:         statsmodels: 0.13.5
2023-03-26 15:38:11,746:INFO:              sktime: 0.16.1
2023-03-26 15:38:11,746:INFO:               tbats: 1.1.2
2023-03-26 15:38:11,746:INFO:            pmdarima: 2.0.3
2023-03-26 15:38:11,746:INFO:              psutil: 5.9.4
2023-03-26 15:38:11,746:INFO:PyCaret optional dependencies:
2023-03-26 15:38:11,796:INFO:                shap: Not installed
2023-03-26 15:38:11,796:INFO:           interpret: Not installed
2023-03-26 15:38:11,796:INFO:                umap: Not installed
2023-03-26 15:38:11,796:INFO:    pandas_profiling: Not installed
2023-03-26 15:38:11,796:INFO:  explainerdashboard: Not installed
2023-03-26 15:38:11,796:INFO:             autoviz: Not installed
2023-03-26 15:38:11,796:INFO:           fairlearn: Not installed
2023-03-26 15:38:11,796:INFO:             xgboost: Not installed
2023-03-26 15:38:11,796:INFO:            catboost: Not installed
2023-03-26 15:38:11,796:INFO:              kmodes: Not installed
2023-03-26 15:38:11,796:INFO:             mlxtend: Not installed
2023-03-26 15:38:11,796:INFO:       statsforecast: Not installed
2023-03-26 15:38:11,796:INFO:        tune_sklearn: Not installed
2023-03-26 15:38:11,796:INFO:                 ray: Not installed
2023-03-26 15:38:11,796:INFO:            hyperopt: Not installed
2023-03-26 15:38:11,796:INFO:              optuna: Not installed
2023-03-26 15:38:11,796:INFO:               skopt: Not installed
2023-03-26 15:38:11,796:INFO:              mlflow: Not installed
2023-03-26 15:38:11,796:INFO:              gradio: Not installed
2023-03-26 15:38:11,796:INFO:             fastapi: Not installed
2023-03-26 15:38:11,796:INFO:             uvicorn: Not installed
2023-03-26 15:38:11,796:INFO:              m2cgen: Not installed
2023-03-26 15:38:11,796:INFO:           evidently: Not installed
2023-03-26 15:38:11,796:INFO:               fugue: Not installed
2023-03-26 15:38:11,796:INFO:           streamlit: Not installed
2023-03-26 15:38:11,796:INFO:             prophet: Not installed
2023-03-26 15:38:11,796:INFO:None
2023-03-26 15:38:11,796:INFO:Set up GPU usage.
2023-03-26 15:38:11,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:11,796:WARNING:cuML is outdated or not found. Required version is >=22.10, got 3.0.0
2023-03-26 15:38:11,796:INFO:Set up data.
2023-03-26 15:38:11,830:INFO:Set up train/test split.
2023-03-26 15:38:11,846:INFO:Set up index.
2023-03-26 15:38:11,846:INFO:Set up folding strategy.
2023-03-26 15:38:11,846:INFO:Assigning column types.
2023-03-26 15:38:11,865:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-03-26 15:38:11,866:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:12,080:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-26 15:38:12,080:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:12,084:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:12,087:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-26 15:38:12,087:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:12,196:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:12,224:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:12,232:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:38:12,428:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:38:12,431:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:12,634:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-26 15:38:12,634:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:12,635:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:12,638:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-26 15:38:12,638:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:12,739:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:12,746:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:12,766:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:38:12,985:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:38:12,986:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-03-26 15:38:12,987:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:13,225:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:13,225:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:13,228:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-26 15:38:13,228:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:13,346:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:13,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:13,376:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:38:13,451:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:38:13,453:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:13,651:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:13,652:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:13,655:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-26 15:38:13,655:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:13,746:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:13,765:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:13,768:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:38:13,832:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:38:13,834:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-03-26 15:38:13,834:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:13,995:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:13,996:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:13,996:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:14,083:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:14,096:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:14,096:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:38:14,165:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:38:14,167:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:14,341:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:14,342:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:14,344:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:14,426:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:14,444:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:14,446:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:38:14,516:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:38:14,522:INFO:Preparing preprocessing pipeline...
2023-03-26 15:38:14,524:INFO:Set up label encoding.
2023-03-26 15:38:14,525:INFO:Set up simple imputation.
2023-03-26 15:38:14,543:INFO:Set up encoding of ordinal features.
2023-03-26 15:38:14,547:INFO:Set up encoding of categorical features.
2023-03-26 15:38:14,875:INFO:Finished creating preprocessing pipeline.
2023-03-26 15:38:14,946:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MSLINKS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Age', 'Na_to_K'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empt...
                                                                        {'col': 'Cholesterol',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': HIGH      0
NORMAL    1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['BP'],
                                    transformer=OneHotEncoder(cols=['BP'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2023-03-26 15:38:14,946:INFO:Creating final display dataframe.
2023-03-26 15:38:15,183:INFO:Setup _display_container:                     Description                                             Value
0                    Session id                                               123
1                        Target                                              Drug
2                   Target type                                        Multiclass
3                Target mapping  DrugY: 0, drugA: 1, drugB: 2, drugC: 3, drugX: 4
4           Original data shape                                          (200, 6)
5        Transformed data shape                                          (200, 8)
6   Transformed train set shape                                          (172, 8)
7    Transformed test set shape                                           (28, 8)
8              Ordinal features                                                 2
9              Numeric features                                                 2
10         Categorical features                                                 3
11                   Preprocess                                              True
12              Imputation type                                            simple
13           Numeric imputation                                              mean
14       Categorical imputation                                              mode
15     Maximum one-hot encoding                                                25
16              Encoding method                                              None
17               Fold Generator                                   StratifiedKFold
18                  Fold Number                                                10
19                     CPU Jobs                                                -1
20                      Use GPU                                              True
21               Log Experiment                                             False
22              Experiment Name                                 classifying_drugs
23                          USI                                              5384
2023-03-26 15:38:15,196:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:15,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:15,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:15,373:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:15,437:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:15,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:15,452:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:38:15,517:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:38:15,518:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:15,695:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:15,695:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:15,696:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:15,746:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:15,769:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:38:15,771:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:38:15,840:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:38:15,842:INFO:setup() successfully completed in 4.15s...............
2023-03-26 15:38:15,842:INFO:Initializing predict_model()
2023-03-26 15:38:15,842:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DB350CC490>, estimator=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DB350CC490>, probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DB43A20550>)
2023-03-26 15:38:15,843:INFO:Checking exceptions
2023-03-26 15:38:15,843:INFO:Preloading libraries
2023-03-26 15:50:42,349:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:42,349:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:42,349:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:42,349:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:43,699:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-26 15:50:45,529:INFO:PyCaret ClassificationExperiment
2023-03-26 15:50:45,529:INFO:Logging name: classifying_drugs
2023-03-26 15:50:45,530:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-03-26 15:50:45,530:INFO:version 3.0.0
2023-03-26 15:50:45,530:INFO:Initializing setup()
2023-03-26 15:50:45,530:INFO:self.USI: ca60
2023-03-26 15:50:45,530:INFO:self._variable_keys: {'gpu_param', 'fold_shuffle_param', 'exp_id', 'is_multiclass', '_available_plots', 'idx', 'seed', 'html_param', 'fold_groups_param', 'exp_name_log', 'USI', 'y_test', 'y', 'logging_param', 'pipeline', 'X_train', 'log_plots_param', 'fix_imbalance', '_ml_usecase', 'X', 'fold_generator', 'target_param', 'X_test', 'memory', 'y_train', 'data', 'n_jobs_param', 'gpu_n_jobs_param'}
2023-03-26 15:50:45,530:INFO:Checking environment
2023-03-26 15:50:45,530:INFO:python_version: 3.10.10
2023-03-26 15:50:45,531:INFO:python_build: ('main', 'Mar 21 2023 18:39:17')
2023-03-26 15:50:45,531:INFO:machine: AMD64
2023-03-26 15:50:45,553:INFO:platform: Windows-10-10.0.19045-SP0
2023-03-26 15:50:45,559:INFO:Memory: svmem(total=8518459392, available=1850351616, percent=78.3, used=6668107776, free=1850351616)
2023-03-26 15:50:45,559:INFO:Physical Core: 2
2023-03-26 15:50:45,559:INFO:Logical Core: 4
2023-03-26 15:50:45,560:INFO:Checking libraries
2023-03-26 15:50:45,560:INFO:System:
2023-03-26 15:50:45,560:INFO:    python: 3.10.10 | packaged by Anaconda, Inc. | (main, Mar 21 2023, 18:39:17) [MSC v.1916 64 bit (AMD64)]
2023-03-26 15:50:45,561:INFO:executable: e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\python.exe
2023-03-26 15:50:45,561:INFO:   machine: Windows-10-10.0.19045-SP0
2023-03-26 15:50:45,561:INFO:PyCaret required dependencies:
2023-03-26 15:50:45,561:INFO:                 pip: 23.0.1
2023-03-26 15:50:45,562:INFO:          setuptools: 65.6.3
2023-03-26 15:50:45,562:INFO:             pycaret: 3.0.0
2023-03-26 15:50:45,562:INFO:             IPython: 8.11.0
2023-03-26 15:50:45,562:INFO:          ipywidgets: 8.0.5
2023-03-26 15:50:45,562:INFO:                tqdm: 4.65.0
2023-03-26 15:50:45,563:INFO:               numpy: 1.23.5
2023-03-26 15:50:45,563:INFO:              pandas: 1.5.3
2023-03-26 15:50:45,563:INFO:              jinja2: 3.1.2
2023-03-26 15:50:45,563:INFO:               scipy: 1.10.1
2023-03-26 15:50:45,564:INFO:              joblib: 1.2.0
2023-03-26 15:50:45,564:INFO:             sklearn: 1.2.2
2023-03-26 15:50:45,564:INFO:                pyod: 1.0.9
2023-03-26 15:50:45,564:INFO:            imblearn: 0.10.1
2023-03-26 15:50:45,564:INFO:   category_encoders: 2.6.0
2023-03-26 15:50:45,565:INFO:            lightgbm: 3.3.5
2023-03-26 15:50:45,565:INFO:               numba: 0.56.4
2023-03-26 15:50:45,565:INFO:            requests: 2.28.2
2023-03-26 15:50:45,565:INFO:          matplotlib: 3.7.1
2023-03-26 15:50:45,565:INFO:          scikitplot: 0.3.7
2023-03-26 15:50:45,565:INFO:         yellowbrick: 1.5
2023-03-26 15:50:45,565:INFO:              plotly: 5.13.1
2023-03-26 15:50:45,566:INFO:             kaleido: 0.2.1
2023-03-26 15:50:45,566:INFO:         statsmodels: 0.13.5
2023-03-26 15:50:45,566:INFO:              sktime: 0.16.1
2023-03-26 15:50:45,566:INFO:               tbats: 1.1.2
2023-03-26 15:50:45,567:INFO:            pmdarima: 2.0.3
2023-03-26 15:50:45,567:INFO:              psutil: 5.9.4
2023-03-26 15:50:45,567:INFO:PyCaret optional dependencies:
2023-03-26 15:50:45,600:INFO:                shap: Not installed
2023-03-26 15:50:45,600:INFO:           interpret: Not installed
2023-03-26 15:50:45,600:INFO:                umap: Not installed
2023-03-26 15:50:45,600:INFO:    pandas_profiling: Not installed
2023-03-26 15:50:45,600:INFO:  explainerdashboard: Not installed
2023-03-26 15:50:45,600:INFO:             autoviz: Not installed
2023-03-26 15:50:45,600:INFO:           fairlearn: Not installed
2023-03-26 15:50:45,600:INFO:             xgboost: Not installed
2023-03-26 15:50:45,600:INFO:            catboost: Not installed
2023-03-26 15:50:45,600:INFO:              kmodes: Not installed
2023-03-26 15:50:45,600:INFO:             mlxtend: Not installed
2023-03-26 15:50:45,600:INFO:       statsforecast: Not installed
2023-03-26 15:50:45,600:INFO:        tune_sklearn: Not installed
2023-03-26 15:50:45,600:INFO:                 ray: Not installed
2023-03-26 15:50:45,600:INFO:            hyperopt: Not installed
2023-03-26 15:50:45,600:INFO:              optuna: Not installed
2023-03-26 15:50:45,600:INFO:               skopt: Not installed
2023-03-26 15:50:45,600:INFO:              mlflow: Not installed
2023-03-26 15:50:45,600:INFO:              gradio: Not installed
2023-03-26 15:50:45,600:INFO:             fastapi: Not installed
2023-03-26 15:50:45,600:INFO:             uvicorn: Not installed
2023-03-26 15:50:45,600:INFO:              m2cgen: Not installed
2023-03-26 15:50:45,600:INFO:           evidently: Not installed
2023-03-26 15:50:45,600:INFO:               fugue: Not installed
2023-03-26 15:50:45,600:INFO:           streamlit: Not installed
2023-03-26 15:50:45,600:INFO:             prophet: Not installed
2023-03-26 15:50:45,600:INFO:None
2023-03-26 15:50:45,600:INFO:Set up GPU usage.
2023-03-26 15:50:45,600:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:45,600:WARNING:cuML is outdated or not found. Required version is >=22.10, got 3.0.0
2023-03-26 15:50:45,600:INFO:Set up data.
2023-03-26 15:50:45,624:INFO:Set up train/test split.
2023-03-26 15:50:45,636:INFO:Set up index.
2023-03-26 15:50:45,637:INFO:Set up folding strategy.
2023-03-26 15:50:45,637:INFO:Assigning column types.
2023-03-26 15:50:45,644:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-03-26 15:50:45,645:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:45,818:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-26 15:50:45,818:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:45,822:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:45,824:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-26 15:50:45,825:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:45,898:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:45,900:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:45,915:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:50:46,236:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:50:46,237:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:46,400:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-26 15:50:46,400:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:46,400:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:46,400:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-26 15:50:46,400:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:46,479:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:46,490:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:46,493:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:50:46,572:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:50:46,573:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-03-26 15:50:46,575:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:46,800:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:46,800:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:46,819:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-26 15:50:46,819:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:46,982:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:47,015:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:47,029:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:50:47,359:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:50:47,361:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:47,777:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:47,778:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:47,780:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-26 15:50:47,780:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:47,871:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:47,887:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:47,890:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:50:48,147:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:50:48,148:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-03-26 15:50:48,153:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:48,340:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:48,341:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:48,342:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:48,443:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:48,478:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:48,494:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:50:48,638:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:50:48,640:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:48,842:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:48,843:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:48,845:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:48,936:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:48,946:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:48,950:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:50:49,034:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:50:49,040:INFO:Preparing preprocessing pipeline...
2023-03-26 15:50:49,043:INFO:Set up label encoding.
2023-03-26 15:50:49,043:INFO:Set up simple imputation.
2023-03-26 15:50:49,069:INFO:Set up encoding of ordinal features.
2023-03-26 15:50:49,123:INFO:Set up encoding of categorical features.
2023-03-26 15:50:49,558:INFO:Finished creating preprocessing pipeline.
2023-03-26 15:50:49,681:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MSLINKS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Age', 'Na_to_K'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empt...
                                                                        {'col': 'Cholesterol',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': HIGH      0
NORMAL    1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['BP'],
                                    transformer=OneHotEncoder(cols=['BP'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2023-03-26 15:50:49,682:INFO:Creating final display dataframe.
2023-03-26 15:50:49,942:INFO:Setup _display_container:                     Description                                             Value
0                    Session id                                               123
1                        Target                                              Drug
2                   Target type                                        Multiclass
3                Target mapping  DrugY: 0, drugA: 1, drugB: 2, drugC: 3, drugX: 4
4           Original data shape                                          (200, 6)
5        Transformed data shape                                          (200, 8)
6   Transformed train set shape                                          (172, 8)
7    Transformed test set shape                                           (28, 8)
8              Ordinal features                                                 2
9              Numeric features                                                 2
10         Categorical features                                                 3
11                   Preprocess                                              True
12              Imputation type                                            simple
13           Numeric imputation                                              mean
14       Categorical imputation                                              mode
15     Maximum one-hot encoding                                                25
16              Encoding method                                              None
17               Fold Generator                                   StratifiedKFold
18                  Fold Number                                                10
19                     CPU Jobs                                                -1
20                      Use GPU                                              True
21               Log Experiment                                             False
22              Experiment Name                                 classifying_drugs
23                          USI                                              ca60
2023-03-26 15:50:50,145:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:50,376:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:50,377:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:50,378:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:50,440:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:50,453:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:50,457:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:50:50,531:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:50:50,532:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:50,719:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:50,720:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:50,723:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:50,815:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:50,831:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 15:50:50,836:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:50:50,900:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-26 15:50:50,900:INFO:setup() successfully completed in 5.38s...............
2023-03-26 15:50:50,900:INFO:Initializing compare_models()
2023-03-26 15:50:50,900:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E9073AC400>, include=None, fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002E9073AC400>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-03-26 15:50:50,900:INFO:Checking exceptions
2023-03-26 15:50:50,925:INFO:Preparing display monitor
2023-03-26 15:50:50,937:INFO:Initializing Logistic Regression
2023-03-26 15:50:50,937:INFO:Total runtime is 1.6677379608154298e-05 minutes
2023-03-26 15:50:50,938:INFO:SubProcess create_model() called ==================================
2023-03-26 15:50:50,938:INFO:Initializing create_model()
2023-03-26 15:50:50,939:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E9073AC400>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E915D23070>, model_only=True, return_train_score=False, kwargs={})
2023-03-26 15:50:50,939:INFO:Checking exceptions
2023-03-26 15:50:50,939:INFO:Importing libraries
2023-03-26 15:50:50,939:INFO:Copying training dataset
2023-03-26 15:50:50,953:INFO:Defining folds
2023-03-26 15:50:50,954:INFO:Declaring metric variables
2023-03-26 15:50:50,954:INFO:Importing untrained model
2023-03-26 15:50:50,956:INFO:Logistic Regression Imported successfully
2023-03-26 15:50:50,957:INFO:Starting cross validation
2023-03-26 15:50:50,965:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-03-26 15:50:52,291:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-03-26 15:50:52,750:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:50:52,772:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:50:52,779:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:50:54,028:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-03-26 15:50:54,450:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:50:54,450:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:50:54,471:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:50:55,388:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-03-26 15:50:55,832:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:50:55,840:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:50:55,847:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:50:56,800:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-03-26 15:50:57,274:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:50:57,279:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:50:57,286:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:50:58,474:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-03-26 15:50:58,918:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:50:58,923:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:50:58,927:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:50:59,826:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-03-26 15:51:00,251:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:00,273:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:00,281:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:01,151:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-03-26 15:51:01,582:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:01,590:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:01,598:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:02,611:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-03-26 15:51:03,245:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:03,254:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:03,261:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:04,183:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-03-26 15:51:04,620:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:04,624:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:04,628:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:05,523:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-03-26 15:51:06,400:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-03-26 15:51:06,471:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:06,479:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:06,486:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:06,563:INFO:Calculating mean and std
2023-03-26 15:51:06,593:INFO:Creating metrics dataframe
2023-03-26 15:51:06,638:INFO:Uploading results into container
2023-03-26 15:51:06,640:INFO:Uploading model into container now
2023-03-26 15:51:06,641:INFO:_master_model_container: 1
2023-03-26 15:51:06,641:INFO:_display_container: 2
2023-03-26 15:51:06,642:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-03-26 15:51:06,643:INFO:create_model() successfully completed......................................
2023-03-26 15:51:06,781:INFO:SubProcess create_model() end ==================================
2023-03-26 15:51:06,782:INFO:Creating metrics dataframe
2023-03-26 15:51:06,799:INFO:Initializing K Neighbors Classifier
2023-03-26 15:51:06,800:INFO:Total runtime is 0.26440611282984416 minutes
2023-03-26 15:51:06,800:INFO:SubProcess create_model() called ==================================
2023-03-26 15:51:06,801:INFO:Initializing create_model()
2023-03-26 15:51:06,801:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E9073AC400>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E915D23070>, model_only=True, return_train_score=False, kwargs={})
2023-03-26 15:51:06,801:INFO:Checking exceptions
2023-03-26 15:51:06,801:INFO:Importing libraries
2023-03-26 15:51:06,801:INFO:Copying training dataset
2023-03-26 15:51:06,820:INFO:Defining folds
2023-03-26 15:51:06,821:INFO:Declaring metric variables
2023-03-26 15:51:06,821:INFO:Importing untrained model
2023-03-26 15:51:06,822:INFO:K Neighbors Classifier Imported successfully
2023-03-26 15:51:06,823:INFO:Starting cross validation
2023-03-26 15:51:06,828:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-03-26 15:51:15,159:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:15,172:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:15,177:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:16,071:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:16,076:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:16,082:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:16,879:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:16,884:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:16,891:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:17,702:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:17,702:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:17,720:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:18,628:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:18,635:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:18,642:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:19,488:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:19,493:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:19,497:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:20,348:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:20,352:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:20,352:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:51:20,352:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:21,339:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:21,348:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:21,352:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:22,193:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:22,200:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:22,202:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:51:22,202:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:23,002:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:23,020:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:23,023:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:51:23,025:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:23,102:INFO:Calculating mean and std
2023-03-26 15:51:23,102:INFO:Creating metrics dataframe
2023-03-26 15:51:23,174:INFO:Uploading results into container
2023-03-26 15:51:23,175:INFO:Uploading model into container now
2023-03-26 15:51:23,176:INFO:_master_model_container: 2
2023-03-26 15:51:23,176:INFO:_display_container: 2
2023-03-26 15:51:23,177:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-03-26 15:51:23,177:INFO:create_model() successfully completed......................................
2023-03-26 15:51:23,302:INFO:SubProcess create_model() end ==================================
2023-03-26 15:51:23,302:INFO:Creating metrics dataframe
2023-03-26 15:51:23,331:INFO:Initializing Naive Bayes
2023-03-26 15:51:23,331:INFO:Total runtime is 0.5399222890535991 minutes
2023-03-26 15:51:23,332:INFO:SubProcess create_model() called ==================================
2023-03-26 15:51:23,332:INFO:Initializing create_model()
2023-03-26 15:51:23,332:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E9073AC400>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E915D23070>, model_only=True, return_train_score=False, kwargs={})
2023-03-26 15:51:23,333:INFO:Checking exceptions
2023-03-26 15:51:23,333:INFO:Importing libraries
2023-03-26 15:51:23,333:INFO:Copying training dataset
2023-03-26 15:51:23,344:INFO:Defining folds
2023-03-26 15:51:23,345:INFO:Declaring metric variables
2023-03-26 15:51:23,346:INFO:Importing untrained model
2023-03-26 15:51:23,346:INFO:Naive Bayes Imported successfully
2023-03-26 15:51:23,347:INFO:Starting cross validation
2023-03-26 15:51:23,350:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-03-26 15:51:24,102:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:24,102:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:24,123:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:25,278:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:25,285:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:25,294:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:26,176:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:26,183:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:26,192:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:26,983:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:26,990:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:26,997:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:27,823:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:27,830:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:27,839:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:28,642:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:28,650:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:28,655:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:51:28,658:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:29,473:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:29,478:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:29,482:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:30,272:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:30,277:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:30,282:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:31,179:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:31,185:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:31,193:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:32,195:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:32,203:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:32,203:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:32,332:INFO:Calculating mean and std
2023-03-26 15:51:32,335:INFO:Creating metrics dataframe
2023-03-26 15:51:32,398:INFO:Uploading results into container
2023-03-26 15:51:32,400:INFO:Uploading model into container now
2023-03-26 15:51:32,401:INFO:_master_model_container: 3
2023-03-26 15:51:32,401:INFO:_display_container: 2
2023-03-26 15:51:32,401:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-03-26 15:51:32,402:INFO:create_model() successfully completed......................................
2023-03-26 15:51:32,544:INFO:SubProcess create_model() end ==================================
2023-03-26 15:51:32,544:INFO:Creating metrics dataframe
2023-03-26 15:51:32,562:INFO:Initializing Decision Tree Classifier
2023-03-26 15:51:32,563:INFO:Total runtime is 0.6937911113103231 minutes
2023-03-26 15:51:32,563:INFO:SubProcess create_model() called ==================================
2023-03-26 15:51:32,564:INFO:Initializing create_model()
2023-03-26 15:51:32,564:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E9073AC400>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E915D23070>, model_only=True, return_train_score=False, kwargs={})
2023-03-26 15:51:32,564:INFO:Checking exceptions
2023-03-26 15:51:32,564:INFO:Importing libraries
2023-03-26 15:51:32,564:INFO:Copying training dataset
2023-03-26 15:51:32,576:INFO:Defining folds
2023-03-26 15:51:32,577:INFO:Declaring metric variables
2023-03-26 15:51:32,578:INFO:Importing untrained model
2023-03-26 15:51:32,579:INFO:Decision Tree Classifier Imported successfully
2023-03-26 15:51:32,580:INFO:Starting cross validation
2023-03-26 15:51:32,584:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-03-26 15:51:33,321:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:33,328:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:33,335:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:34,071:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:34,078:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:34,085:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:34,894:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:34,898:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:34,903:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:35,697:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:35,702:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:35,703:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:36,470:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:36,475:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:36,479:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:37,247:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:37,253:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:37,253:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:51:37,253:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:38,033:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:38,040:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:38,047:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:38,803:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:38,821:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:38,825:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:39,626:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:39,631:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:39,636:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:40,436:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:40,441:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:40,445:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:40,853:INFO:Calculating mean and std
2023-03-26 15:51:40,869:INFO:Creating metrics dataframe
2023-03-26 15:51:40,938:INFO:Uploading results into container
2023-03-26 15:51:40,940:INFO:Uploading model into container now
2023-03-26 15:51:40,941:INFO:_master_model_container: 4
2023-03-26 15:51:40,941:INFO:_display_container: 2
2023-03-26 15:51:40,943:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-03-26 15:51:40,943:INFO:create_model() successfully completed......................................
2023-03-26 15:51:41,092:INFO:SubProcess create_model() end ==================================
2023-03-26 15:51:41,092:INFO:Creating metrics dataframe
2023-03-26 15:51:41,103:INFO:Initializing SVM - Linear Kernel
2023-03-26 15:51:41,103:INFO:Total runtime is 0.8361318310101827 minutes
2023-03-26 15:51:41,103:INFO:SubProcess create_model() called ==================================
2023-03-26 15:51:41,103:INFO:Initializing create_model()
2023-03-26 15:51:41,103:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E9073AC400>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E915D23070>, model_only=True, return_train_score=False, kwargs={})
2023-03-26 15:51:41,103:INFO:Checking exceptions
2023-03-26 15:51:41,103:INFO:Importing libraries
2023-03-26 15:51:41,103:INFO:Copying training dataset
2023-03-26 15:51:41,122:INFO:Defining folds
2023-03-26 15:51:41,123:INFO:Declaring metric variables
2023-03-26 15:51:41,124:INFO:Importing untrained model
2023-03-26 15:51:41,125:INFO:SVM - Linear Kernel Imported successfully
2023-03-26 15:51:41,125:INFO:Starting cross validation
2023-03-26 15:51:41,128:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-03-26 15:51:41,829:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-03-26 15:51:41,833:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:41,840:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:41,844:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:51:41,848:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:42,501:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-03-26 15:51:42,503:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:42,504:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:42,504:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:51:42,504:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:43,254:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-03-26 15:51:43,254:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:43,276:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:43,280:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:51:43,283:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:44,204:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-03-26 15:51:44,219:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:44,227:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:44,231:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:51:44,234:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:45,004:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-03-26 15:51:45,004:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:45,004:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:45,023:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:51:45,027:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:45,796:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-03-26 15:51:45,799:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:45,805:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:45,805:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:51:45,805:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:46,630:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-03-26 15:51:46,632:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:46,637:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:46,643:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:51:46,646:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:47,388:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-03-26 15:51:47,391:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:47,397:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:47,399:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:51:47,402:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:48,153:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-03-26 15:51:48,153:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:48,174:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:48,178:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:51:48,181:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:48,976:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-03-26 15:51:48,978:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:48,985:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:48,990:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:51:48,994:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:49,454:INFO:Calculating mean and std
2023-03-26 15:51:49,454:INFO:Creating metrics dataframe
2023-03-26 15:51:49,557:INFO:Uploading results into container
2023-03-26 15:51:49,559:INFO:Uploading model into container now
2023-03-26 15:51:49,563:INFO:_master_model_container: 5
2023-03-26 15:51:49,563:INFO:_display_container: 2
2023-03-26 15:51:49,565:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-03-26 15:51:49,565:INFO:create_model() successfully completed......................................
2023-03-26 15:51:49,735:INFO:SubProcess create_model() end ==================================
2023-03-26 15:51:49,736:INFO:Creating metrics dataframe
2023-03-26 15:51:49,754:INFO:Initializing Ridge Classifier
2023-03-26 15:51:49,754:INFO:Total runtime is 0.9803083856900534 minutes
2023-03-26 15:51:49,754:INFO:SubProcess create_model() called ==================================
2023-03-26 15:51:49,754:INFO:Initializing create_model()
2023-03-26 15:51:49,754:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E9073AC400>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E915D23070>, model_only=True, return_train_score=False, kwargs={})
2023-03-26 15:51:49,754:INFO:Checking exceptions
2023-03-26 15:51:49,754:INFO:Importing libraries
2023-03-26 15:51:49,754:INFO:Copying training dataset
2023-03-26 15:51:49,775:INFO:Defining folds
2023-03-26 15:51:49,776:INFO:Declaring metric variables
2023-03-26 15:51:49,776:INFO:Importing untrained model
2023-03-26 15:51:49,778:INFO:Ridge Classifier Imported successfully
2023-03-26 15:51:49,779:INFO:Starting cross validation
2023-03-26 15:51:49,783:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-03-26 15:51:50,636:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-03-26 15:51:50,640:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:50,648:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:50,654:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:51,454:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-03-26 15:51:51,454:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:51,470:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:51,478:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:52,504:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-03-26 15:51:52,504:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:52,523:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:52,530:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:53,354:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-03-26 15:51:53,354:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:53,371:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:53,376:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:54,130:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-03-26 15:51:54,133:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:54,140:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:54,145:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:55,140:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-03-26 15:51:55,143:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:55,150:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:55,155:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:51:55,159:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:55,890:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-03-26 15:51:55,892:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:55,897:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:55,901:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:56,651:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-03-26 15:51:56,655:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:56,655:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:56,655:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:57,491:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-03-26 15:51:57,493:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:57,498:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:57,505:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:58,327:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-03-26 15:51:58,331:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:58,338:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:58,345:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:51:58,533:INFO:Calculating mean and std
2023-03-26 15:51:58,535:INFO:Creating metrics dataframe
2023-03-26 15:51:58,627:INFO:Uploading results into container
2023-03-26 15:51:58,629:INFO:Uploading model into container now
2023-03-26 15:51:58,630:INFO:_master_model_container: 6
2023-03-26 15:51:58,631:INFO:_display_container: 2
2023-03-26 15:51:58,632:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-03-26 15:51:58,632:INFO:create_model() successfully completed......................................
2023-03-26 15:51:58,770:INFO:SubProcess create_model() end ==================================
2023-03-26 15:51:58,770:INFO:Creating metrics dataframe
2023-03-26 15:51:58,783:INFO:Initializing Random Forest Classifier
2023-03-26 15:51:58,783:INFO:Total runtime is 1.1307974735895794 minutes
2023-03-26 15:51:58,784:INFO:SubProcess create_model() called ==================================
2023-03-26 15:51:58,784:INFO:Initializing create_model()
2023-03-26 15:51:58,784:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E9073AC400>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E915D23070>, model_only=True, return_train_score=False, kwargs={})
2023-03-26 15:51:58,785:INFO:Checking exceptions
2023-03-26 15:51:58,785:INFO:Importing libraries
2023-03-26 15:51:58,785:INFO:Copying training dataset
2023-03-26 15:51:58,797:INFO:Defining folds
2023-03-26 15:51:58,797:INFO:Declaring metric variables
2023-03-26 15:51:58,798:INFO:Importing untrained model
2023-03-26 15:51:58,800:INFO:Random Forest Classifier Imported successfully
2023-03-26 15:51:58,801:INFO:Starting cross validation
2023-03-26 15:51:58,806:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-03-26 15:52:01,050:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:01,054:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:01,063:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:03,197:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:03,205:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:03,205:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:05,439:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:05,447:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:05,455:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:07,723:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:07,730:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:07,737:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:10,105:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:10,130:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:10,138:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:12,348:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:12,353:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:12,356:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:52:12,356:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:14,587:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:14,594:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:14,601:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:17,186:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:17,194:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:17,201:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:19,488:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:19,498:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:19,502:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:22,157:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:22,165:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:22,173:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:22,388:INFO:Calculating mean and std
2023-03-26 15:52:22,391:INFO:Creating metrics dataframe
2023-03-26 15:52:22,513:INFO:Uploading results into container
2023-03-26 15:52:22,516:INFO:Uploading model into container now
2023-03-26 15:52:22,517:INFO:_master_model_container: 7
2023-03-26 15:52:22,517:INFO:_display_container: 2
2023-03-26 15:52:22,519:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-03-26 15:52:22,520:INFO:create_model() successfully completed......................................
2023-03-26 15:52:22,685:INFO:SubProcess create_model() end ==================================
2023-03-26 15:52:22,685:INFO:Creating metrics dataframe
2023-03-26 15:52:22,701:INFO:Initializing Quadratic Discriminant Analysis
2023-03-26 15:52:22,701:INFO:Total runtime is 1.5294251720110577 minutes
2023-03-26 15:52:22,701:INFO:SubProcess create_model() called ==================================
2023-03-26 15:52:22,702:INFO:Initializing create_model()
2023-03-26 15:52:22,702:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E9073AC400>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E915D23070>, model_only=True, return_train_score=False, kwargs={})
2023-03-26 15:52:22,702:INFO:Checking exceptions
2023-03-26 15:52:22,702:INFO:Importing libraries
2023-03-26 15:52:22,702:INFO:Copying training dataset
2023-03-26 15:52:22,717:INFO:Defining folds
2023-03-26 15:52:22,718:INFO:Declaring metric variables
2023-03-26 15:52:22,719:INFO:Importing untrained model
2023-03-26 15:52:22,719:INFO:Quadratic Discriminant Analysis Imported successfully
2023-03-26 15:52:22,720:INFO:Starting cross validation
2023-03-26 15:52:22,729:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-03-26 15:52:23,096:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-26 15:52:23,450:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:23,451:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:23,451:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-26 15:52:23,500:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:23,501:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:23,501:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-26 15:52:23,506:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-03-26 15:52:23,506:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:23,506:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:23,506:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:52:23,506:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:23,806:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-26 15:52:24,141:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:24,141:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:24,141:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-26 15:52:24,184:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:24,184:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:24,185:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-26 15:52:24,190:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-03-26 15:52:24,193:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:24,198:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:24,201:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:52:24,204:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:24,801:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-26 15:52:25,133:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:25,133:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:25,133:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-26 15:52:25,177:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:25,178:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:25,178:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-26 15:52:25,181:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-03-26 15:52:25,182:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:25,187:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:25,191:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:52:25,195:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:25,586:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-26 15:52:25,941:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:25,941:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:25,942:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-26 15:52:25,987:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:25,987:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:25,988:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-26 15:52:25,993:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-03-26 15:52:25,996:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:26,003:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:26,007:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:52:26,007:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:26,457:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-26 15:52:26,776:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:26,776:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:26,777:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-26 15:52:26,833:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:26,833:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:26,834:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-26 15:52:26,837:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-03-26 15:52:26,839:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:26,846:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:26,850:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:52:26,854:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:27,282:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-26 15:52:27,607:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:27,607:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:27,607:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-26 15:52:27,657:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:27,657:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:27,657:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-26 15:52:27,672:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-03-26 15:52:27,676:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:27,680:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:27,683:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:52:27,685:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:28,101:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-26 15:52:28,435:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:28,435:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:28,436:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-26 15:52:28,482:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:28,483:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:28,483:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-26 15:52:28,488:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-03-26 15:52:28,491:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:28,497:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:28,500:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:52:28,502:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:28,951:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-26 15:52:29,407:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:29,407:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:29,407:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-26 15:52:29,457:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:29,457:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:29,457:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-26 15:52:29,472:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-03-26 15:52:29,477:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:29,484:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:29,488:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:52:29,493:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:29,942:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-26 15:52:30,289:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:30,289:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:30,291:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-26 15:52:30,345:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:30,345:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:30,346:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-26 15:52:30,349:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-03-26 15:52:30,351:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:30,356:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:30,357:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:52:30,357:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:30,776:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-26 15:52:31,127:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:31,127:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:31,127:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-26 15:52:31,163:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:31,163:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-26 15:52:31,164:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-26 15:52:31,167:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-03-26 15:52:31,168:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:31,175:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:31,180:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:52:31,183:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:31,386:INFO:Calculating mean and std
2023-03-26 15:52:31,388:INFO:Creating metrics dataframe
2023-03-26 15:52:31,494:INFO:Uploading results into container
2023-03-26 15:52:31,497:INFO:Uploading model into container now
2023-03-26 15:52:31,498:INFO:_master_model_container: 8
2023-03-26 15:52:31,498:INFO:_display_container: 2
2023-03-26 15:52:31,499:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-03-26 15:52:31,499:INFO:create_model() successfully completed......................................
2023-03-26 15:52:31,656:INFO:SubProcess create_model() end ==================================
2023-03-26 15:52:31,656:INFO:Creating metrics dataframe
2023-03-26 15:52:31,679:INFO:Initializing Ada Boost Classifier
2023-03-26 15:52:31,680:INFO:Total runtime is 1.6790750066439313 minutes
2023-03-26 15:52:31,680:INFO:SubProcess create_model() called ==================================
2023-03-26 15:52:31,681:INFO:Initializing create_model()
2023-03-26 15:52:31,681:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E9073AC400>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E915D23070>, model_only=True, return_train_score=False, kwargs={})
2023-03-26 15:52:31,682:INFO:Checking exceptions
2023-03-26 15:52:31,682:INFO:Importing libraries
2023-03-26 15:52:31,682:INFO:Copying training dataset
2023-03-26 15:52:31,698:INFO:Defining folds
2023-03-26 15:52:31,698:INFO:Declaring metric variables
2023-03-26 15:52:31,699:INFO:Importing untrained model
2023-03-26 15:52:31,700:INFO:Ada Boost Classifier Imported successfully
2023-03-26 15:52:31,701:INFO:Starting cross validation
2023-03-26 15:52:31,706:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-03-26 15:52:33,235:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:33,242:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:33,246:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:52:33,250:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:34,707:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:34,725:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:34,730:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:52:34,733:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:36,299:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:36,306:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:36,307:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:52:36,307:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:37,886:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:37,893:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:37,897:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:52:37,901:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:39,508:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:39,508:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:39,523:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:52:39,528:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:41,108:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:41,108:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:41,108:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:52:41,108:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:42,785:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:42,792:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:42,796:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:52:42,800:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:44,380:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:44,387:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:44,391:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:52:44,395:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:45,988:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:45,994:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:46,000:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:52:46,003:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:47,599:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:47,603:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:47,607:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:52:47,612:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:47,850:INFO:Calculating mean and std
2023-03-26 15:52:47,852:INFO:Creating metrics dataframe
2023-03-26 15:52:47,992:INFO:Uploading results into container
2023-03-26 15:52:47,994:INFO:Uploading model into container now
2023-03-26 15:52:47,995:INFO:_master_model_container: 9
2023-03-26 15:52:47,995:INFO:_display_container: 2
2023-03-26 15:52:47,996:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-03-26 15:52:47,996:INFO:create_model() successfully completed......................................
2023-03-26 15:52:48,158:INFO:SubProcess create_model() end ==================================
2023-03-26 15:52:48,158:INFO:Creating metrics dataframe
2023-03-26 15:52:48,183:INFO:Initializing Gradient Boosting Classifier
2023-03-26 15:52:48,183:INFO:Total runtime is 1.954121784369151 minutes
2023-03-26 15:52:48,184:INFO:SubProcess create_model() called ==================================
2023-03-26 15:52:48,184:INFO:Initializing create_model()
2023-03-26 15:52:48,184:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E9073AC400>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E915D23070>, model_only=True, return_train_score=False, kwargs={})
2023-03-26 15:52:48,185:INFO:Checking exceptions
2023-03-26 15:52:48,185:INFO:Importing libraries
2023-03-26 15:52:48,185:INFO:Copying training dataset
2023-03-26 15:52:48,199:INFO:Defining folds
2023-03-26 15:52:48,200:INFO:Declaring metric variables
2023-03-26 15:52:48,201:INFO:Importing untrained model
2023-03-26 15:52:48,202:INFO:Gradient Boosting Classifier Imported successfully
2023-03-26 15:52:48,202:INFO:Starting cross validation
2023-03-26 15:52:48,205:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-03-26 15:52:50,769:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.77s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-26 15:52:52,530:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.82s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-03-26 15:52:53,309:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:53,331:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:53,338:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:55,859:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.80s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-26 15:52:57,599:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.89s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-03-26 15:52:58,397:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:58,404:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:52:58,409:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:01,696:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.20s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-26 15:53:04,380:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.27s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-03-26 15:53:05,255:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:05,259:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:05,259:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:07,908:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.76s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-26 15:53:09,603:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.82s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-03-26 15:53:10,430:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:10,438:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:10,444:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:13,046:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.74s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-26 15:53:14,810:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.87s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-03-26 15:53:15,592:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:15,600:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:15,608:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:18,258:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.85s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-26 15:53:20,160:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.98s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-03-26 15:53:21,083:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:21,091:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:21,095:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:53:21,097:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:23,761:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-26 15:53:25,844:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.14s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-03-26 15:53:26,791:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:26,801:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:26,806:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:29,416:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.72s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-26 15:53:31,600:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.86s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-03-26 15:53:32,533:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:32,540:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:32,548:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:35,424:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.74s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-26 15:53:37,245:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.87s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-03-26 15:53:38,077:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:38,085:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:38,092:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:40,961:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-03-26 15:53:42,983:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.84s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-03-26 15:53:43,823:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:43,831:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:43,838:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:44,129:INFO:Calculating mean and std
2023-03-26 15:53:44,132:INFO:Creating metrics dataframe
2023-03-26 15:53:44,273:INFO:Uploading results into container
2023-03-26 15:53:44,275:INFO:Uploading model into container now
2023-03-26 15:53:44,276:INFO:_master_model_container: 10
2023-03-26 15:53:44,276:INFO:_display_container: 2
2023-03-26 15:53:44,277:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-03-26 15:53:44,277:INFO:create_model() successfully completed......................................
2023-03-26 15:53:44,425:INFO:SubProcess create_model() end ==================================
2023-03-26 15:53:44,425:INFO:Creating metrics dataframe
2023-03-26 15:53:44,445:INFO:Initializing Linear Discriminant Analysis
2023-03-26 15:53:44,445:INFO:Total runtime is 2.8918326695760093 minutes
2023-03-26 15:53:44,445:INFO:SubProcess create_model() called ==================================
2023-03-26 15:53:44,445:INFO:Initializing create_model()
2023-03-26 15:53:44,445:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E9073AC400>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E915D23070>, model_only=True, return_train_score=False, kwargs={})
2023-03-26 15:53:44,445:INFO:Checking exceptions
2023-03-26 15:53:44,445:INFO:Importing libraries
2023-03-26 15:53:44,445:INFO:Copying training dataset
2023-03-26 15:53:44,445:INFO:Defining folds
2023-03-26 15:53:44,445:INFO:Declaring metric variables
2023-03-26 15:53:44,445:INFO:Importing untrained model
2023-03-26 15:53:44,459:INFO:Linear Discriminant Analysis Imported successfully
2023-03-26 15:53:44,461:INFO:Starting cross validation
2023-03-26 15:53:44,472:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-03-26 15:53:45,176:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:45,183:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:45,190:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:45,846:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:45,846:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:45,866:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:46,686:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:46,693:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:46,696:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:47,580:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:47,587:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:47,594:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:48,464:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:48,472:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:48,477:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:49,366:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:49,374:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:49,379:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:53:49,382:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:50,253:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:50,267:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:50,271:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:51,128:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:51,136:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:51,143:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:51,989:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:51,996:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:51,996:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:52,817:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:52,821:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:52,826:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:53,133:INFO:Calculating mean and std
2023-03-26 15:53:53,135:INFO:Creating metrics dataframe
2023-03-26 15:53:53,290:INFO:Uploading results into container
2023-03-26 15:53:53,292:INFO:Uploading model into container now
2023-03-26 15:53:53,293:INFO:_master_model_container: 11
2023-03-26 15:53:53,294:INFO:_display_container: 2
2023-03-26 15:53:53,295:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-03-26 15:53:53,295:INFO:create_model() successfully completed......................................
2023-03-26 15:53:53,439:INFO:SubProcess create_model() end ==================================
2023-03-26 15:53:53,439:INFO:Creating metrics dataframe
2023-03-26 15:53:53,446:INFO:Initializing Extra Trees Classifier
2023-03-26 15:53:53,446:INFO:Total runtime is 3.041843084494273 minutes
2023-03-26 15:53:53,446:INFO:SubProcess create_model() called ==================================
2023-03-26 15:53:53,446:INFO:Initializing create_model()
2023-03-26 15:53:53,446:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E9073AC400>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E915D23070>, model_only=True, return_train_score=False, kwargs={})
2023-03-26 15:53:53,446:INFO:Checking exceptions
2023-03-26 15:53:53,446:INFO:Importing libraries
2023-03-26 15:53:53,446:INFO:Copying training dataset
2023-03-26 15:53:53,476:INFO:Defining folds
2023-03-26 15:53:53,477:INFO:Declaring metric variables
2023-03-26 15:53:53,477:INFO:Importing untrained model
2023-03-26 15:53:53,480:INFO:Extra Trees Classifier Imported successfully
2023-03-26 15:53:53,481:INFO:Starting cross validation
2023-03-26 15:53:53,485:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-03-26 15:53:55,687:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:55,695:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:55,696:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:57,822:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:57,829:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:53:57,836:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:00,295:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:00,297:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:00,297:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:02,625:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:02,633:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:02,640:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:04,919:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:04,927:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:04,933:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:07,172:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:07,180:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:07,184:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:54:07,187:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:09,427:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:09,434:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:09,438:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:54:09,442:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:11,697:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:11,713:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:11,720:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:13,944:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:13,948:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:13,948:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:16,278:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:16,286:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:16,293:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:16,616:INFO:Calculating mean and std
2023-03-26 15:54:16,620:INFO:Creating metrics dataframe
2023-03-26 15:54:16,818:INFO:Uploading results into container
2023-03-26 15:54:16,820:INFO:Uploading model into container now
2023-03-26 15:54:16,822:INFO:_master_model_container: 12
2023-03-26 15:54:16,822:INFO:_display_container: 2
2023-03-26 15:54:16,824:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-03-26 15:54:16,824:INFO:create_model() successfully completed......................................
2023-03-26 15:54:16,987:INFO:SubProcess create_model() end ==================================
2023-03-26 15:54:16,987:INFO:Creating metrics dataframe
2023-03-26 15:54:16,998:INFO:Initializing Light Gradient Boosting Machine
2023-03-26 15:54:16,998:INFO:Total runtime is 3.4343709588050846 minutes
2023-03-26 15:54:16,998:INFO:SubProcess create_model() called ==================================
2023-03-26 15:54:16,998:INFO:Initializing create_model()
2023-03-26 15:54:16,998:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E9073AC400>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E915D23070>, model_only=True, return_train_score=False, kwargs={})
2023-03-26 15:54:16,998:INFO:Checking exceptions
2023-03-26 15:54:16,998:INFO:Importing libraries
2023-03-26 15:54:16,998:INFO:Copying training dataset
2023-03-26 15:54:17,021:INFO:Defining folds
2023-03-26 15:54:17,022:INFO:Declaring metric variables
2023-03-26 15:54:17,022:INFO:Importing untrained model
2023-03-26 15:54:17,024:INFO:Light Gradient Boosting Machine Imported successfully
2023-03-26 15:54:17,025:INFO:Starting cross validation
2023-03-26 15:54:17,030:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-03-26 15:54:45,000:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:45,000:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:45,018:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:50,800:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:50,800:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:50,800:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:57,001:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:57,001:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:54:57,017:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:02,980:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:02,988:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:02,994:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:08,871:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:08,879:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:08,886:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:14,742:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:14,749:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:14,752:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:21,306:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:21,313:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:21,320:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:27,051:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:27,060:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:27,068:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:35,153:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:35,176:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:35,184:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:41,638:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:41,645:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:41,652:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:42,048:INFO:Calculating mean and std
2023-03-26 15:55:42,050:INFO:Creating metrics dataframe
2023-03-26 15:55:42,235:INFO:Uploading results into container
2023-03-26 15:55:42,238:INFO:Uploading model into container now
2023-03-26 15:55:42,239:INFO:_master_model_container: 13
2023-03-26 15:55:42,239:INFO:_display_container: 2
2023-03-26 15:55:42,240:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               device='gpu', importance_type='split', learning_rate=0.1,
               max_depth=-1, min_child_samples=20, min_child_weight=0.001,
               min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
               objective=None, random_state=123, reg_alpha=0.0, reg_lambda=0.0,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0)
2023-03-26 15:55:42,241:INFO:create_model() successfully completed......................................
2023-03-26 15:55:42,392:INFO:SubProcess create_model() end ==================================
2023-03-26 15:55:42,392:INFO:Creating metrics dataframe
2023-03-26 15:55:42,404:INFO:Initializing Dummy Classifier
2023-03-26 15:55:42,404:INFO:Total runtime is 4.857805061340333 minutes
2023-03-26 15:55:42,404:INFO:SubProcess create_model() called ==================================
2023-03-26 15:55:42,404:INFO:Initializing create_model()
2023-03-26 15:55:42,404:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E9073AC400>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E915D23070>, model_only=True, return_train_score=False, kwargs={})
2023-03-26 15:55:42,404:INFO:Checking exceptions
2023-03-26 15:55:42,404:INFO:Importing libraries
2023-03-26 15:55:42,404:INFO:Copying training dataset
2023-03-26 15:55:42,432:INFO:Defining folds
2023-03-26 15:55:42,432:INFO:Declaring metric variables
2023-03-26 15:55:42,433:INFO:Importing untrained model
2023-03-26 15:55:42,434:INFO:Dummy Classifier Imported successfully
2023-03-26 15:55:42,435:INFO:Starting cross validation
2023-03-26 15:55:42,440:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2023-03-26 15:55:43,220:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:43,228:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:43,232:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:55:43,236:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:43,922:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:43,927:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:43,929:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:55:43,931:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:44,836:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:44,841:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:44,844:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:55:44,846:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:45,782:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:45,786:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:45,790:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:55:45,794:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:46,694:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:46,703:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:46,704:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:55:46,704:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:47,597:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:47,602:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:47,604:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:55:47,604:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:48,533:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:48,538:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:48,542:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:55:48,546:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:49,430:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:49,434:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:49,436:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:55:49,439:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:50,354:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:50,354:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:50,374:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:55:50,376:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:51,328:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:51,335:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:51,338:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-26 15:55:51,342:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:51,749:INFO:Calculating mean and std
2023-03-26 15:55:51,752:INFO:Creating metrics dataframe
2023-03-26 15:55:51,932:INFO:Uploading results into container
2023-03-26 15:55:51,934:INFO:Uploading model into container now
2023-03-26 15:55:51,936:INFO:_master_model_container: 14
2023-03-26 15:55:51,936:INFO:_display_container: 2
2023-03-26 15:55:51,937:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-03-26 15:55:51,937:INFO:create_model() successfully completed......................................
2023-03-26 15:55:52,100:INFO:SubProcess create_model() end ==================================
2023-03-26 15:55:52,100:INFO:Creating metrics dataframe
2023-03-26 15:55:52,128:INFO:Initializing create_model()
2023-03-26 15:55:52,128:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E9073AC400>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               device='gpu', importance_type='split', learning_rate=0.1,
               max_depth=-1, min_child_samples=20, min_child_weight=0.001,
               min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
               objective=None, random_state=123, reg_alpha=0.0, reg_lambda=0.0,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-03-26 15:55:52,129:INFO:Checking exceptions
2023-03-26 15:55:52,131:INFO:Importing libraries
2023-03-26 15:55:52,131:INFO:Copying training dataset
2023-03-26 15:55:52,146:INFO:Defining folds
2023-03-26 15:55:52,146:INFO:Declaring metric variables
2023-03-26 15:55:52,147:INFO:Importing untrained model
2023-03-26 15:55:52,147:INFO:Declaring custom model
2023-03-26 15:55:52,150:INFO:Light Gradient Boosting Machine Imported successfully
2023-03-26 15:55:52,153:INFO:Cross validation set to False
2023-03-26 15:55:52,153:INFO:Fitting Model
2023-03-26 15:55:59,030:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               device='gpu', importance_type='split', learning_rate=0.1,
               max_depth=-1, min_child_samples=20, min_child_weight=0.001,
               min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
               objective=None, random_state=123, reg_alpha=0.0, reg_lambda=0.0,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0)
2023-03-26 15:55:59,031:INFO:create_model() successfully completed......................................
2023-03-26 15:55:59,275:INFO:_master_model_container: 14
2023-03-26 15:55:59,275:INFO:_display_container: 2
2023-03-26 15:55:59,277:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               device='gpu', importance_type='split', learning_rate=0.1,
               max_depth=-1, min_child_samples=20, min_child_weight=0.001,
               min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
               objective=None, random_state=123, reg_alpha=0.0, reg_lambda=0.0,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0)
2023-03-26 15:55:59,277:INFO:compare_models() successfully completed......................................
2023-03-26 15:55:59,279:INFO:Initializing predict_model()
2023-03-26 15:55:59,279:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E9073AC400>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               device='gpu', importance_type='split', learning_rate=0.1,
               max_depth=-1, min_child_samples=20, min_child_weight=0.001,
               min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
               objective=None, random_state=123, reg_alpha=0.0, reg_lambda=0.0,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002E916F69990>)
2023-03-26 15:55:59,279:INFO:Checking exceptions
2023-03-26 15:55:59,279:INFO:Preloading libraries
2023-03-26 15:55:59,463:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:59,468:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:59,474:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:59,478:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:59,481:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:59,486:WARNING:e:\Learnings\Machine Learning\drug_classification_using_pycaret\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'drugX') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-26 15:55:59,831:INFO:Initializing save_model()
2023-03-26 15:55:59,832:INFO:save_model(model=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               device='gpu', importance_type='split', learning_rate=0.1,
               max_depth=-1, min_child_samples=20, min_child_weight=0.001,
               min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
               objective=None, random_state=123, reg_alpha=0.0, reg_lambda=0.0,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0), model_name=classification, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MSLINKS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Age', 'Na_to_K'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empt...
                                                                        {'col': 'Cholesterol',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': HIGH      0
NORMAL    1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['BP'],
                                    transformer=OneHotEncoder(cols=['BP'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-03-26 15:55:59,832:INFO:Adding model into prep_pipe
2023-03-26 15:55:59,900:INFO:classification.pkl saved in current working directory
2023-03-26 15:56:00,081:INFO:Pipeline(memory=FastMemory(location=C:\Users\MSLINKS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Age', 'Na_to_K'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empt...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, device='gpu',
                                importance_type='split', learning_rate=0.1,
                                max_depth=-1, min_child_samples=20,
                                min_child_weight=0.001, min_split_gain=0.0,
                                n_estimators=100, n_jobs=-1, num_leaves=31,
                                objective=None, random_state=123, reg_alpha=0.0,
                                reg_lambda=0.0, silent='warn', subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2023-03-26 15:56:00,081:INFO:save_model() successfully completed......................................
